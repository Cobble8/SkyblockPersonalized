buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath "com.github.Skytils:ForgeGradle:6f5327"
        classpath 'com.github.xcfrg:MixinGradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = ""
group= "com.cobble.sbp"
archivesBaseName = "[1.8.9] SkyblockPersonalized ["+mod_version+"]"
sourceCompatibility = JavaVersion.VERSION_1_8


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

repositories {
    maven { url 'https://repo.spongepowered.org/maven/' }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    annotationProcessor "org.spongepowered:mixin:0.7.11-SNAPSHOT"
}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    manifest.attributes(
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": mod_id+".mixins.json",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true
    )
}

sourceSets {
    main {
        ext.refMap = "sbp.mixins.refmap.json"
    }
}

mixin {
    add sourceSets.main, "sbp.mixins.refmap.json"

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources